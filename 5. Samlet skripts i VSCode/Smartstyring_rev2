import math
import array

# Henter inn dagens strømpriser
stromPrisArrayDagens = system.tag.read("DagensPriser").value

totalForbruk = 608.2 # m^3/h, fant dette ved å sette pådraget til pumpa til 0 og simulere et døgn
#totalForbruk = 722.87426 # m^3/h, np.sqrt(2.8)*C_v2*60*60*24

# Leser pumpens maksimale strømning
pumpeKapasitet = system.tag.read("PumpeMaksStromning").value
pumpeQ_time = pumpeKapasitet

# Finner antall timer som må kjøres for å motvirke forventet forbruk for døgnet
antallTimer = totalForbruk / pumpeQ_time
antallTimerAvrundet = int(math.ceil(antallTimer))

# Finner hvilke timer i døgnet som er billigst
laveste_pris = sorted(stromPrisArrayDagens)[:antallTimerAvrundet]
laveste_pris_index = [stromPrisArrayDagens.index(val) for val in laveste_pris]

# Danner døgnets styringsprofil
styringsProfilArray = array.array('d', [0] * 24)

for indexer in laveste_pris_index:
    styringsProfilArray[indexer] = 1
	
# Passer arrayet til OPC
system.tag.writeBlocking(["Pumpestyringsprofil"], [list(styringsProfilArray)])